<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label_HelpText_BMS.Text" xml:space="preserve">
    <value>Привет! Это инструкция по использованию данной программы. Хочу сразу отметить, что путь, куда сохраняется файл указывается один раз, при первом добавлении данных. Этот путь нельзя менять, так как интерфейс программы сделан под конкретный путь .

* Для начала нужно добавить данные, это можно сделать в соответствующем разделе.
Как добавить данные:
1)Заполнить форму и нажать на кнопку                эта кнопка нужна для первого создания файла, она сразу создает файл в удобном для Вас месте.

2) Важно сразу определиться в какой папке будет файл, так как интерфейс программы построен специально для конкретного место расположения файла.
3) Для того, чтобы добавить данные в последующие раза достаточно ввести данные в форму и нажать кнопку "добавить данные".

* Чтобы просмотреть добавленные данные:
1) нажмите на кнопку " Показать добавленные данные".

* Программа поддерживает редактирование файла:
1)Для этого нужно нажать кнопку "Показать добавленные данные".
2) После в таблице внести изменения и нажать кнопку "Сохранить изменеия в файле".

* В верхней части программы над таблице расположен блок сортировака. Для того, чтобы выполнить сортировку нужно:
1)Добавить данные в таблицу с помощью кнопки "Показать добавленные файлы ". 
2) Выбрать по какому критерию выполнить сортировку.
3) Нажать кнопку "Сортировать".

* В правом верхнем углу расположен поиск. Поиск выполняется по тексту из одной ячейки (Пример: В первой ячейке написано "Привет", во второй "Мир". В строку поиска вводить либо "Привет " либо "Мир" ).
Для того чтобы выполнить поиск нужно:
1) В строку поиска ввести текст.

2) Нажать на кнопку

* В правом нижнем углу, под таблицей, находитя счетчик  "Общего числа сотрудника".

* Обратная связь возможно по почте: sudni.bb@gmail.com




</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_Save_BMS.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox_Find_BMS.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yvlq9rboI98AAAAASUVORK5CYII=
</value>
  </data>
</root>